import requests
from datetime import datetime, timedelta


def get_group_id(name):
    """–ü–æ–ª—É—á–∞–µ—Ç ID –≥—Ä—É–ø–ø—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    url_id = "https://xn--h1amj9b.xn--80aaiac8g.xn--p1ai/api/raspGrouplist?year=2024-2025"
    resp = requests.get(url_id).json()["data"]
    for i in resp:
        if i["name"] == str(name):
            return i["id"]
    return None


def get_rasp_week(group_name):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –∏–ª–∏ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é"""
    group_id = get_group_id(group_name)
    if not group_id:
        return None

    today = datetime.today()
    weekday = today.weekday()

    # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –ø—è—Ç–Ω–∏—Ü–∞ –∏ –ø–∞—Ä—ã —É–∂–µ –ø—Ä–æ—à–ª–∏, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    if weekday == 4 and datetime.now().hour >= 18:
        monday = today + timedelta(days=(7 - weekday))
    else:
        monday = today - timedelta(days=weekday)

    date = monday.strftime("%Y-%m-%d")

    url = f"https://xn--h1amj9b.xn--80aaiac8g.xn--p1ai/api/Rasp?idGroup={group_id}&sdate={date}"
    resp = requests.get(url).json()

    if "data" not in resp or "rasp" not in resp["data"]:
        return None

    schedule = {}
    for lesson in resp["data"]["rasp"]:
        day = lesson["–¥–µ–Ω—å_–Ω–µ–¥–µ–ª–∏"]
        lesson_date = lesson["–¥–∞—Ç–∞–ù–∞—á–∞–ª–∞"][:10]
        lesson_datetime = datetime.strptime(lesson["–¥–∞—Ç–∞–ù–∞—á–∞–ª–∞"], "%Y-%m-%dT%H:%M:%S")

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ—à–ª–∏ —Å–µ–≥–æ–¥–Ω—è
        if lesson_datetime.date() < today.date() or (
                lesson_datetime.date() == today.date() and lesson_datetime < datetime.now()):
            continue

        if day not in schedule:
            schedule[day] = {"date": lesson_date, "lessons": []}

        schedule[day]["lessons"].append(
            f"üïí {lesson['–Ω–∞—á–∞–ª–æ']} - {lesson['–∫–æ–Ω–µ—Ü']} (–∞—É–¥: {lesson['–∞—É–¥–∏—Ç–æ—Ä–∏—è']})\n"
            f"üìö {lesson['–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞']}\n"
            f"üë®‚Äçüè´ {lesson['–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å']}\n"
            "-------------------"
        )

    # –ï—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é, —Ç–æ –∏—â–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é
    if not schedule:
        monday_next_week = monday + timedelta(days=7)
        date_next_week = monday_next_week.strftime("%Y-%m-%d")
        url_next_week = f"https://xn--h1amj9b.xn--80aaiac8g.xn--p1ai/api/Rasp?idGroup={group_id}&sdate={date_next_week}"
        resp_next_week = requests.get(url_next_week).json()

        if "data" not in resp_next_week or "rasp" not in resp_next_week["data"]:
            return None

        for lesson in resp_next_week["data"]["rasp"]:
            day = lesson["–¥–µ–Ω—å_–Ω–µ–¥–µ–ª–∏"]
            lesson_date = lesson["–¥–∞—Ç–∞–ù–∞—á–∞–ª–∞"][:10]
            lesson_datetime = datetime.strptime(lesson["–¥–∞—Ç–∞–ù–∞—á–∞–ª–∞"], "%Y-%m-%dT%H:%M:%S")

            if day not in schedule:
                schedule[day] = {"date": lesson_date, "lessons": []}

            schedule[day]["lessons"].append(
                f"üïí {lesson['–Ω–∞—á–∞–ª–æ']} - {lesson['–∫–æ–Ω–µ—Ü']} (–∞—É–¥: {lesson['–∞—É–¥–∏—Ç–æ—Ä–∏—è']})\n"
                f"üìö {lesson['–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞']}\n"
                f"üë®‚Äçüè´ {lesson['–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å']}\n"
                "-------------------"
            )

    return schedule
